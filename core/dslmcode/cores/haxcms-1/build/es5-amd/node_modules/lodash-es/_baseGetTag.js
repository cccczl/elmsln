define(["exports", "./_Symbol.js", "./_getRawTag.js", "./_objectToString.js"], function (_exports, _Symbol2, _getRawTag, _objectToString) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  _Symbol2 = babelHelpers.interopRequireDefault(_Symbol2);
  _getRawTag = babelHelpers.interopRequireDefault(_getRawTag);
  _objectToString = babelHelpers.interopRequireDefault(_objectToString);

  /** `Object#toString` result references. */
  var nullTag = '[object Null]',
      undefinedTag = '[object Undefined]';
  /** Built-in value references. */

  var symToStringTag = _Symbol2.default ? _Symbol2.default.toStringTag : undefined;
  /**
   * The base implementation of `getTag` without fallbacks for buggy environments.
   *
   * @private
   * @param {*} value The value to query.
   * @returns {string} Returns the `toStringTag`.
   */

  function baseGetTag(value) {
    if (value == null) {
      return value === undefined ? undefinedTag : nullTag;
    }

    return symToStringTag && symToStringTag in Object(value) ? (0, _getRawTag.default)(value) : (0, _objectToString.default)(value);
  }

  var _default = baseGetTag;
  _exports.default = _default;
});