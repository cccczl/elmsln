define(["exports", "./_assignValue.js", "./_baseZipObject.js"], function (_exports, _assignValue, _baseZipObject) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  _assignValue = babelHelpers.interopRequireDefault(_assignValue);
  _baseZipObject = babelHelpers.interopRequireDefault(_baseZipObject);

  /**
   * This method is like `_.fromPairs` except that it accepts two arrays,
   * one of property identifiers and one of corresponding values.
   *
   * @static
   * @memberOf _
   * @since 0.4.0
   * @category Array
   * @param {Array} [props=[]] The property identifiers.
   * @param {Array} [values=[]] The property values.
   * @returns {Object} Returns the new object.
   * @example
   *
   * _.zipObject(['a', 'b'], [1, 2]);
   * // => { 'a': 1, 'b': 2 }
   */
  function zipObject(props, values) {
    return (0, _baseZipObject.default)(props || [], values || [], _assignValue.default);
  }

  var _default = zipObject;
  _exports.default = _default;
});