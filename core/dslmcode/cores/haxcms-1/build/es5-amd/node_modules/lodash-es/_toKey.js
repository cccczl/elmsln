define(["exports", "./isSymbol.js"], function (_exports, _isSymbol) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  _isSymbol = babelHelpers.interopRequireDefault(_isSymbol);

  /** Used as references for various `Number` constants. */
  var INFINITY = 1 / 0;
  /**
   * Converts `value` to a string key if it's not a string or symbol.
   *
   * @private
   * @param {*} value The value to inspect.
   * @returns {string|symbol} Returns the key.
   */

  function toKey(value) {
    if (typeof value == 'string' || (0, _isSymbol.default)(value)) {
      return value;
    }

    var result = value + '';
    return result == '0' && 1 / value == -INFINITY ? '-0' : result;
  }

  var _default = toKey;
  _exports.default = _default;
});