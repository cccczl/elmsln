define(["exports", "./_castPath.js", "./isArguments.js", "./isArray.js", "./_isIndex.js", "./isLength.js", "./_toKey.js"], function (_exports, _castPath, _isArguments, _isArray, _isIndex, _isLength, _toKey) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  _castPath = babelHelpers.interopRequireDefault(_castPath);
  _isArguments = babelHelpers.interopRequireDefault(_isArguments);
  _isArray = babelHelpers.interopRequireDefault(_isArray);
  _isIndex = babelHelpers.interopRequireDefault(_isIndex);
  _isLength = babelHelpers.interopRequireDefault(_isLength);
  _toKey = babelHelpers.interopRequireDefault(_toKey);

  /**
   * Checks if `path` exists on `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array|string} path The path to check.
   * @param {Function} hasFunc The function to check properties.
   * @returns {boolean} Returns `true` if `path` exists, else `false`.
   */
  function hasPath(object, path, hasFunc) {
    path = (0, _castPath.default)(path, object);
    var index = -1,
        length = path.length,
        result = false;

    while (++index < length) {
      var key = (0, _toKey.default)(path[index]);

      if (!(result = object != null && hasFunc(object, key))) {
        break;
      }

      object = object[key];
    }

    if (result || ++index != length) {
      return result;
    }

    length = object == null ? 0 : object.length;
    return !!length && (0, _isLength.default)(length) && (0, _isIndex.default)(key, length) && ((0, _isArray.default)(object) || (0, _isArguments.default)(object));
  }

  var _default = hasPath;
  _exports.default = _default;
});