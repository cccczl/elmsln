define(["exports", "./_baseIsArguments.js", "./isObjectLike.js"], function (_exports, _baseIsArguments, _isObjectLike) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  _baseIsArguments = babelHelpers.interopRequireDefault(_baseIsArguments);
  _isObjectLike = babelHelpers.interopRequireDefault(_isObjectLike);

  /** Used for built-in method references. */
  var objectProto = Object.prototype;
  /** Used to check objects for own properties. */

  var hasOwnProperty = objectProto.hasOwnProperty;
  /** Built-in value references. */

  var propertyIsEnumerable = objectProto.propertyIsEnumerable;
  /**
   * Checks if `value` is likely an `arguments` object.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an `arguments` object,
   *  else `false`.
   * @example
   *
   * _.isArguments(function() { return arguments; }());
   * // => true
   *
   * _.isArguments([1, 2, 3]);
   * // => false
   */

  var isArguments = (0, _baseIsArguments.default)(function () {
    return arguments;
  }()) ? _baseIsArguments.default : function (value) {
    return (0, _isObjectLike.default)(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');
  };
  var _default = isArguments;
  _exports.default = _default;
});