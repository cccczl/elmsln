define(["exports", "./_hashClear.js", "./_hashDelete.js", "./_hashGet.js", "./_hashHas.js", "./_hashSet.js"], function (_exports, _hashClear, _hashDelete, _hashGet, _hashHas, _hashSet) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  _hashClear = babelHelpers.interopRequireDefault(_hashClear);
  _hashDelete = babelHelpers.interopRequireDefault(_hashDelete);
  _hashGet = babelHelpers.interopRequireDefault(_hashGet);
  _hashHas = babelHelpers.interopRequireDefault(_hashHas);
  _hashSet = babelHelpers.interopRequireDefault(_hashSet);

  /**
   * Creates a hash object.
   *
   * @private
   * @constructor
   * @param {Array} [entries] The key-value pairs to cache.
   */
  function Hash(entries) {
    var index = -1,
        length = entries == null ? 0 : entries.length;
    this.clear();

    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  } // Add methods to `Hash`.


  Hash.prototype.clear = _hashClear.default;
  Hash.prototype['delete'] = _hashDelete.default;
  Hash.prototype.get = _hashGet.default;
  Hash.prototype.has = _hashHas.default;
  Hash.prototype.set = _hashSet.default;
  var _default = Hash;
  _exports.default = _default;
});