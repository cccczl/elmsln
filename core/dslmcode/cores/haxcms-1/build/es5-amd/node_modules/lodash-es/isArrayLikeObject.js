define(["exports", "./isArrayLike.js", "./isObjectLike.js"], function (_exports, _isArrayLike, _isObjectLike) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  _isArrayLike = babelHelpers.interopRequireDefault(_isArrayLike);
  _isObjectLike = babelHelpers.interopRequireDefault(_isObjectLike);

  /**
   * This method is like `_.isArrayLike` except that it also checks if `value`
   * is an object.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an array-like object,
   *  else `false`.
   * @example
   *
   * _.isArrayLikeObject([1, 2, 3]);
   * // => true
   *
   * _.isArrayLikeObject(document.body.children);
   * // => true
   *
   * _.isArrayLikeObject('abc');
   * // => false
   *
   * _.isArrayLikeObject(_.noop);
   * // => false
   */
  function isArrayLikeObject(value) {
    return (0, _isObjectLike.default)(value) && (0, _isArrayLike.default)(value);
  }

  var _default = isArrayLikeObject;
  _exports.default = _default;
});