import r from"./_baseToString.js";import i from"./_castSlice.js";import e from"./_hasUnicode.js";import t from"./isObject.js";import o from"./isRegExp.js";import s from"./_stringSize.js";import n from"./_stringToArray.js";import a from"./toInteger.js";import f from"./toString.js";var m=/\w*$/;function truncate(l,c){var g=30,p="...";if(t(c)){var v="separator"in c?c.separator:v;g="length"in c?a(c.length):g,p="omission"in c?r(c.omission):p}var j=(l=f(l)).length;if(e(l)){var u=n(l);j=u.length}if(g>=j)return l;var x=g-s(p);if(x<1)return p;var d=u?i(u,0,x).join(""):l.slice(0,x);if(void 0===v)return d+p;if(u&&(x+=d.length-x),o(v)){if(l.slice(x).search(v)){var h,_=d;for(v.global||(v=RegExp(v.source,f(m.exec(v))+"g")),v.lastIndex=0;h=v.exec(_);)var S=h.index;d=d.slice(0,void 0===S?x:S)}}else if(l.indexOf(r(v),x)!=x){var b=d.lastIndexOf(v);b>-1&&(d=d.slice(0,b))}return d+p}export default truncate;