/**
 * @license
 * Lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="es" -o ./`
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
import t from"./array.js";import e from"./collection.js";import r from"./date.js";import i from"./function.js";import o from"./lang.js";import n from"./math.js";import a from"./number.js";import s from"./object.js";import p from"./seq.js";import l from"./string.js";import f from"./util.js";import u from"./_LazyWrapper.js";import h from"./_LodashWrapper.js";import c from"./_Symbol.js";import m from"./_arrayEach.js";import d from"./_arrayPush.js";import y from"./_baseForOwn.js";import g from"./_baseFunctions.js";import _ from"./_baseInvoke.js";import v from"./_baseIteratee.js";import b from"./_baseRest.js";import j from"./_createHybrid.js";import W from"./identity.js";import I from"./isArray.js";import k from"./isObject.js";import B from"./keys.js";import R from"./last.js";import x from"./_lazyClone.js";import O from"./_lazyReverse.js";import w from"./_lazyValue.js";import A from"./mixin.js";import S from"./negate.js";import E from"./_realNames.js";import L from"./thru.js";import z from"./toInteger.js";import q from"./wrapperLodash.js";var M,D=Array.prototype,P=Object.prototype.hasOwnProperty,N=c?c.iterator:void 0,C=Math.max,F=Math.min,K=function(t){return function(e,r,i){if(null==i){var o=k(r),n=o&&B(r),a=n&&n.length&&g(r,n);(a?a.length:o)||(i=r,r=e,e=this)}return t(e,r,i)}}(A);q.after=i.after,q.ary=i.ary,q.assign=s.assign,q.assignIn=s.assignIn,q.assignInWith=s.assignInWith,q.assignWith=s.assignWith,q.at=s.at,q.before=i.before,q.bind=i.bind,q.bindAll=f.bindAll,q.bindKey=i.bindKey,q.castArray=o.castArray,q.chain=p.chain,q.chunk=t.chunk,q.compact=t.compact,q.concat=t.concat,q.cond=f.cond,q.conforms=f.conforms,q.constant=f.constant,q.countBy=e.countBy,q.create=s.create,q.curry=i.curry,q.curryRight=i.curryRight,q.debounce=i.debounce,q.defaults=s.defaults,q.defaultsDeep=s.defaultsDeep,q.defer=i.defer,q.delay=i.delay,q.difference=t.difference,q.differenceBy=t.differenceBy,q.differenceWith=t.differenceWith,q.drop=t.drop,q.dropRight=t.dropRight,q.dropRightWhile=t.dropRightWhile,q.dropWhile=t.dropWhile,q.fill=t.fill,q.filter=e.filter,q.flatMap=e.flatMap,q.flatMapDeep=e.flatMapDeep,q.flatMapDepth=e.flatMapDepth,q.flatten=t.flatten,q.flattenDeep=t.flattenDeep,q.flattenDepth=t.flattenDepth,q.flip=i.flip,q.flow=f.flow,q.flowRight=f.flowRight,q.fromPairs=t.fromPairs,q.functions=s.functions,q.functionsIn=s.functionsIn,q.groupBy=e.groupBy,q.initial=t.initial,q.intersection=t.intersection,q.intersectionBy=t.intersectionBy,q.intersectionWith=t.intersectionWith,q.invert=s.invert,q.invertBy=s.invertBy,q.invokeMap=e.invokeMap,q.iteratee=f.iteratee,q.keyBy=e.keyBy,q.keys=B,q.keysIn=s.keysIn,q.map=e.map,q.mapKeys=s.mapKeys,q.mapValues=s.mapValues,q.matches=f.matches,q.matchesProperty=f.matchesProperty,q.memoize=i.memoize,q.merge=s.merge,q.mergeWith=s.mergeWith,q.method=f.method,q.methodOf=f.methodOf,q.mixin=K,q.negate=S,q.nthArg=f.nthArg,q.omit=s.omit,q.omitBy=s.omitBy,q.once=i.once,q.orderBy=e.orderBy,q.over=f.over,q.overArgs=i.overArgs,q.overEvery=f.overEvery,q.overSome=f.overSome,q.partial=i.partial,q.partialRight=i.partialRight,q.partition=e.partition,q.pick=s.pick,q.pickBy=s.pickBy,q.property=f.property,q.propertyOf=f.propertyOf,q.pull=t.pull,q.pullAll=t.pullAll,q.pullAllBy=t.pullAllBy,q.pullAllWith=t.pullAllWith,q.pullAt=t.pullAt,q.range=f.range,q.rangeRight=f.rangeRight,q.rearg=i.rearg,q.reject=e.reject,q.remove=t.remove,q.rest=i.rest,q.reverse=t.reverse,q.sampleSize=e.sampleSize,q.set=s.set,q.setWith=s.setWith,q.shuffle=e.shuffle,q.slice=t.slice,q.sortBy=e.sortBy,q.sortedUniq=t.sortedUniq,q.sortedUniqBy=t.sortedUniqBy,q.split=l.split,q.spread=i.spread,q.tail=t.tail,q.take=t.take,q.takeRight=t.takeRight,q.takeRightWhile=t.takeRightWhile,q.takeWhile=t.takeWhile,q.tap=p.tap,q.throttle=i.throttle,q.thru=L,q.toArray=o.toArray,q.toPairs=s.toPairs,q.toPairsIn=s.toPairsIn,q.toPath=f.toPath,q.toPlainObject=o.toPlainObject,q.transform=s.transform,q.unary=i.unary,q.union=t.union,q.unionBy=t.unionBy,q.unionWith=t.unionWith,q.uniq=t.uniq,q.uniqBy=t.uniqBy,q.uniqWith=t.uniqWith,q.unset=s.unset,q.unzip=t.unzip,q.unzipWith=t.unzipWith,q.update=s.update,q.updateWith=s.updateWith,q.values=s.values,q.valuesIn=s.valuesIn,q.without=t.without,q.words=l.words,q.wrap=i.wrap,q.xor=t.xor,q.xorBy=t.xorBy,q.xorWith=t.xorWith,q.zip=t.zip,q.zipObject=t.zipObject,q.zipObjectDeep=t.zipObjectDeep,q.zipWith=t.zipWith,q.entries=s.toPairs,q.entriesIn=s.toPairsIn,q.extend=s.assignIn,q.extendWith=s.assignInWith,K(q,q),q.add=n.add,q.attempt=f.attempt,q.camelCase=l.camelCase,q.capitalize=l.capitalize,q.ceil=n.ceil,q.clamp=a.clamp,q.clone=o.clone,q.cloneDeep=o.cloneDeep,q.cloneDeepWith=o.cloneDeepWith,q.cloneWith=o.cloneWith,q.conformsTo=o.conformsTo,q.deburr=l.deburr,q.defaultTo=f.defaultTo,q.divide=n.divide,q.endsWith=l.endsWith,q.eq=o.eq,q.escape=l.escape,q.escapeRegExp=l.escapeRegExp,q.every=e.every,q.find=e.find,q.findIndex=t.findIndex,q.findKey=s.findKey,q.findLast=e.findLast,q.findLastIndex=t.findLastIndex,q.findLastKey=s.findLastKey,q.floor=n.floor,q.forEach=e.forEach,q.forEachRight=e.forEachRight,q.forIn=s.forIn,q.forInRight=s.forInRight,q.forOwn=s.forOwn,q.forOwnRight=s.forOwnRight,q.get=s.get,q.gt=o.gt,q.gte=o.gte,q.has=s.has,q.hasIn=s.hasIn,q.head=t.head,q.identity=W,q.includes=e.includes,q.indexOf=t.indexOf,q.inRange=a.inRange,q.invoke=s.invoke,q.isArguments=o.isArguments,q.isArray=I,q.isArrayBuffer=o.isArrayBuffer,q.isArrayLike=o.isArrayLike,q.isArrayLikeObject=o.isArrayLikeObject,q.isBoolean=o.isBoolean,q.isBuffer=o.isBuffer,q.isDate=o.isDate,q.isElement=o.isElement,q.isEmpty=o.isEmpty,q.isEqual=o.isEqual,q.isEqualWith=o.isEqualWith,q.isError=o.isError,q.isFinite=o.isFinite,q.isFunction=o.isFunction,q.isInteger=o.isInteger,q.isLength=o.isLength,q.isMap=o.isMap,q.isMatch=o.isMatch,q.isMatchWith=o.isMatchWith,q.isNaN=o.isNaN,q.isNative=o.isNative,q.isNil=o.isNil,q.isNull=o.isNull,q.isNumber=o.isNumber,q.isObject=k,q.isObjectLike=o.isObjectLike,q.isPlainObject=o.isPlainObject,q.isRegExp=o.isRegExp,q.isSafeInteger=o.isSafeInteger,q.isSet=o.isSet,q.isString=o.isString,q.isSymbol=o.isSymbol,q.isTypedArray=o.isTypedArray,q.isUndefined=o.isUndefined,q.isWeakMap=o.isWeakMap,q.isWeakSet=o.isWeakSet,q.join=t.join,q.kebabCase=l.kebabCase,q.last=R,q.lastIndexOf=t.lastIndexOf,q.lowerCase=l.lowerCase,q.lowerFirst=l.lowerFirst,q.lt=o.lt,q.lte=o.lte,q.max=n.max,q.maxBy=n.maxBy,q.mean=n.mean,q.meanBy=n.meanBy,q.min=n.min,q.minBy=n.minBy,q.stubArray=f.stubArray,q.stubFalse=f.stubFalse,q.stubObject=f.stubObject,q.stubString=f.stubString,q.stubTrue=f.stubTrue,q.multiply=n.multiply,q.nth=t.nth,q.noop=f.noop,q.now=r.now,q.pad=l.pad,q.padEnd=l.padEnd,q.padStart=l.padStart,q.parseInt=l.parseInt,q.random=a.random,q.reduce=e.reduce,q.reduceRight=e.reduceRight,q.repeat=l.repeat,q.replace=l.replace,q.result=s.result,q.round=n.round,q.sample=e.sample,q.size=e.size,q.snakeCase=l.snakeCase,q.some=e.some,q.sortedIndex=t.sortedIndex,q.sortedIndexBy=t.sortedIndexBy,q.sortedIndexOf=t.sortedIndexOf,q.sortedLastIndex=t.sortedLastIndex,q.sortedLastIndexBy=t.sortedLastIndexBy,q.sortedLastIndexOf=t.sortedLastIndexOf,q.startCase=l.startCase,q.startsWith=l.startsWith,q.subtract=n.subtract,q.sum=n.sum,q.sumBy=n.sumBy,q.template=l.template,q.times=f.times,q.toFinite=o.toFinite,q.toInteger=z,q.toLength=o.toLength,q.toLower=l.toLower,q.toNumber=o.toNumber,q.toSafeInteger=o.toSafeInteger,q.toString=o.toString,q.toUpper=l.toUpper,q.trim=l.trim,q.trimEnd=l.trimEnd,q.trimStart=l.trimStart,q.truncate=l.truncate,q.unescape=l.unescape,q.uniqueId=f.uniqueId,q.upperCase=l.upperCase,q.upperFirst=l.upperFirst,q.each=e.forEach,q.eachRight=e.forEachRight,q.first=t.head,K(q,(M={},y(q,(function(t,e){P.call(q.prototype,e)||(M[e]=t)})),M),{chain:!1}),q.VERSION="4.17.21",(q.templateSettings=l.templateSettings).imports._=q,m(["bind","bindKey","curry","curryRight","partial","partialRight"],(function(t){q[t].placeholder=q})),m(["drop","take"],(function(t,e){u.prototype[t]=function(r){r=void 0===r?1:C(z(r),0);var i=this.__filtered__&&!e?new u(this):this.clone();return i.__filtered__?i.__takeCount__=F(r,i.__takeCount__):i.__views__.push({size:F(r,4294967295),type:t+(i.__dir__<0?"Right":"")}),i},u.prototype[t+"Right"]=function(e){return this.reverse()[t](e).reverse()}})),m(["filter","map","takeWhile"],(function(t,e){var r=e+1,i=1==r||3==r;u.prototype[t]=function(t){var e=this.clone();return e.__iteratees__.push({iteratee:v(t,3),type:r}),e.__filtered__=e.__filtered__||i,e}})),m(["head","last"],(function(t,e){var r="take"+(e?"Right":"");u.prototype[t]=function(){return this[r](1).value()[0]}})),m(["initial","tail"],(function(t,e){var r="drop"+(e?"":"Right");u.prototype[t]=function(){return this.__filtered__?new u(this):this[r](1)}})),u.prototype.compact=function(){return this.filter(W)},u.prototype.find=function(t){return this.filter(t).head()},u.prototype.findLast=function(t){return this.reverse().find(t)},u.prototype.invokeMap=b((function(t,e){return"function"==typeof t?new u(this):this.map((function(r){return _(r,t,e)}))})),u.prototype.reject=function(t){return this.filter(S(v(t)))},u.prototype.slice=function(t,e){t=z(t);var r=this;return r.__filtered__&&(t>0||e<0)?new u(r):(t<0?r=r.takeRight(-t):t&&(r=r.drop(t)),void 0!==e&&(r=(e=z(e))<0?r.dropRight(-e):r.take(e-t)),r)},u.prototype.takeRightWhile=function(t){return this.reverse().takeWhile(t).reverse()},u.prototype.toArray=function(){return this.take(4294967295)},y(u.prototype,(function(t,e){var r=/^(?:filter|find|map|reject)|While$/.test(e),i=/^(?:head|last)$/.test(e),o=q[i?"take"+("last"==e?"Right":""):e],n=i||/^find/.test(e);o&&(q.prototype[e]=function(){var e=this.__wrapped__,a=i?[1]:arguments,s=e instanceof u,p=a[0],l=s||I(e),interceptor=function(t){var e=o.apply(q,d([t],a));return i&&f?e[0]:e};l&&r&&"function"==typeof p&&1!=p.length&&(s=l=!1);var f=this.__chain__,c=!!this.__actions__.length,m=n&&!f,y=s&&!c;if(!n&&l){e=y?e:new u(this);var g=t.apply(e,a);return g.__actions__.push({func:L,args:[interceptor],thisArg:void 0}),new h(g,f)}return m&&y?t.apply(this,a):(g=this.thru(interceptor),m?i?g.value()[0]:g.value():g)})})),m(["pop","push","shift","sort","splice","unshift"],(function(t){var e=D[t],r=/^(?:push|sort|unshift)$/.test(t)?"tap":"thru",i=/^(?:pop|shift)$/.test(t);q.prototype[t]=function(){var t=arguments;if(i&&!this.__chain__){var o=this.value();return e.apply(I(o)?o:[],t)}return this[r]((function(r){return e.apply(I(r)?r:[],t)}))}})),y(u.prototype,(function(t,e){var r=q[e];if(r){var i=r.name+"";P.call(E,i)||(E[i]=[]),E[i].push({name:e,func:r})}})),E[j(void 0,2).name]=[{name:"wrapper",func:void 0}],u.prototype.clone=x,u.prototype.reverse=O,u.prototype.value=w,q.prototype.at=p.at,q.prototype.chain=p.wrapperChain,q.prototype.commit=p.commit,q.prototype.next=p.next,q.prototype.plant=p.plant,q.prototype.reverse=p.reverse,q.prototype.toJSON=q.prototype.valueOf=q.prototype.value=p.value,q.prototype.first=q.prototype.head,N&&(q.prototype[N]=p.toIterator);export default q;