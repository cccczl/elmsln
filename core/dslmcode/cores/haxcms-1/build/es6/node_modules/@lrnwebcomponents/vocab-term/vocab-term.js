/**
 * Copyright 2021 The Pennsylvania State University
 * @license Apache-2.0, see License.md for full text.
 */
import{LitElement as e,html as t,css as s}from"../../lit/index.js";import{SimplePopover as i}from"../simple-popover/simple-popover.js";import"../simple-modal/lib/simple-modal-template.js";class VocabTerm extends e{static get properties(){return{popoverMode:{type:Boolean,reflect:!0,attribute:"popover-mode"},links:{type:Array}}}constructor(){super(),this.closeText="",this.openText="",this.popoverMode=!1,this.term="",this.querySelector("summary")&&(this.term=this.querySelector("summary").innerText),this.information="",this.querySelector('[slot="information"]')&&(this.information=this.querySelector('[slot="information"]').innerText),this.links=[],this.querySelector(".links a")&&this.querySelectorAll(".links a").forEach((e=>{console.log(e),console.log(e.innerText),this.links.push({title:e.innerText,href:e.getAttribute("href")})}))}static get styles(){let e=[];return super.styles&&(e=super.styles),[...e,s`
        :host {
          display: inline-flex;
        }
        simple-modal-template {
          --simple-modal-resize: both;
          --simple-modal-width: 300px;
          --simple-modal-height: 300px;
          --simple-modal-min-width: 300px;
          --simple-modal-min-height: 300px;
        }
        summary {
          list-style: none;
          border-bottom: 1px dashed gray;
        }
      `]}render(){return t` ${this.popoverMode?t`
          <details>
            <summary id="summary">${this.term}</summary>
            <simple-popover for="summary" position="top">
              <p>${this.information}</p>
              ${this.links.length>0?t`
                    <ul>
                      ${this.links.map((e=>t`
                          <li><a href="${e.href}">${e.title}</a></li>
                        `))}
                    </ul>
                  `:""}
            </simple-popover>
          </details>
        `:t`
          <div>
            <summary id="summary">${this.term}</summary>
            <simple-modal-template>
              <div slot="header">${this.term}</div>
              <p slot="content">${this.information}</p>
              ${this.links.length>0?t` <ul slot="content">
                    ${this.links.map((e=>t`
                        <li><a href="${e.href}">${e.title}</a></li>
                      `))}
                  </ul>`:""}
              <div slot="buttons">
                <button dialog-dismiss>Close Modal</button>
              </div>
            </simple-modal-template>
          </div>
        `}`}static get tag(){return"vocab-term"}_handleClick(e){this.details&&void 0===this.details.open&&(this.toggleOpen(),e.preventDefault(),e.stopPropagation())}_handleKeyup(e){(this.details&&void 0===this.details.open&&13==e.keyCode||32==e.keyCode)&&(this.toggleOpen(),e.preventDefault(),e.stopPropagation())}toggleOpen(){this.details.hasAttribute("open")?(this.details.removeAttribute("open"),this.details.open&&(this.details.open=!1)):(this.details.setAttribute("open",""),this.details.open&&(this.details.open=!0))}firstUpdated(e){super.firstUpdated&&super.firstUpdated(e),0==this.popoverMode&&(this.shadowRoot.querySelector("simple-modal-template").associateEvents(this.shadowRoot.querySelector("summary")),this.shadowRoot.querySelector("summary").addEventListener("focus",this.detailsFocusOut.bind(this)))}detailsFocusOut(){this.shadowRoot.querySelector("details").removeAttribute("open"),this.shadowRoot.querySelector("summary").removeEventListener("focus",this.detailsFocusOut.bind(this))}updated(e){super.updated&&super.updated(e),e.forEach(((e,t)=>{}))}}customElements.define(VocabTerm.tag,VocabTerm);export{VocabTerm};