import{Router as t}from"../../../../@vaadin/router/dist/vaadin-router.js";import{autorun as e,toJS as o}from"../../../../mobx/dist/mobx.esm.js";import{store as s}from"./AppHaxStore.js";export class AppHaxRouter extends HTMLElement{get baseURI(){return this.getAttribute("base-uri")}set baseURI(t){this.setAttribute("base-uri",t)}static get tag(){return"app-hax-router"}constructor(){super();const a={};this.baseURI&&(a.baseUrl=this.baseURI),this.router=new t(this,a),e((()=>{this._updateRouter(o(s.routes))})),e((()=>{const t=o(s.manifest);if(t&&t.items&&t.items.length>0){const e=t.items.map((t=>({path:t.slug,slug:t.slug,name:t.id,component:`fake-${t.id}-e`})));s.routes=[...e].concat(s.baseRoutes)}}))}connectedCallback(){window.addEventListener("vaadin-router-location-changed",this._routerLocationChanged.bind(this))}disconnectedCallback(){window.removeEventListener("vaadin-router-location-changed",this._routerLocationChanged.bind(this))}_updateRouter(t){this.router.setRoutes([...t])}_routerLocationChanged(t){s.location=t.detail.location}}customElements.define(AppHaxRouter.tag,AppHaxRouter);