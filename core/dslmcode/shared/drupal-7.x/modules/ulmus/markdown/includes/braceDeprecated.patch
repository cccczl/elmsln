diff --git a/core/dslmcode/shared/drupal-7.x/modules/ulmus/markdown/includes/MarkdownExtra.php b/core/dslmcode/shared/drupal-7.x/modules/ulmus/markdown/includes/MarkdownExtra.php
index adc57b226e..5e8239a175 100755
--- a/core/dslmcode/shared/drupal-7.x/modules/ulmus/markdown/includes/MarkdownExtra.php
+++ b/core/dslmcode/shared/drupal-7.x/modules/ulmus/markdown/includes/MarkdownExtra.php
@@ -206,9 +206,9 @@ protected function doExtraAttributes($tag_name, $attr, $defaultIdValue = null, $
 		$attributes = array();
 		$id = false;
 		foreach ($elements as $element) {
-			if ($element{0} == '.') {
+			if ($element[0] == '.') {
 				$classes[] = substr($element, 1);
-			} else if ($element{0} == '#') {
+			} else if ($element[0] == '#') {
 				if ($id === false) $id = substr($element, 1);
 			} else if (strpos($element, '=') > 0) {
 				$parts = explode('=', $element, 2);
@@ -508,14 +508,14 @@ protected function _hashHTMLBlocks_inMarkdown($text, $indent = 0,
 				}
 			}
 			// Check for: Indented code block.
-			else if ($tag{0} == "\n" || $tag{0} == " ") {
+			else if ($tag[0] == "\n" || $tag[0] == " ") {
 				// Indented code block: pass it unchanged, will be handled 
 				// later.
 				$parsed .= $tag;
 			}
 			// Check for: Code span marker
 			// Note: need to check this after backtick fenced code blocks
-			else if ($tag{0} == "`") {
+			else if ($tag[0] == "`") {
 				// Find corresponding end marker.
 				$tag_re = preg_quote($tag);
 				if (preg_match('{^(?>.+?|\n(?!\n))*?(?<!`)' . $tag_re . '(?!`)}',
@@ -549,7 +549,7 @@ protected function _hashHTMLBlocks_inMarkdown($text, $indent = 0,
 			// Check for: Clean tag (like script, math)
 			//            HTML Comments, processing instructions.
 			else if (preg_match('{^<(?:' . $this->clean_tags_re() . ')\b}', $tag) ||
-				$tag{1} == '!' || $tag{1} == '?')
+				$tag[1] == '!' || $tag[1] == '?')
 			{
 				// Need to parse tag and following text using the HTML parser.
 				// (don't check for markdown attribute)
@@ -564,8 +564,8 @@ protected function _hashHTMLBlocks_inMarkdown($text, $indent = 0,
 				preg_match('{^</?(?:' . $enclosing_tag_re . ')\b}', $tag))
 			{
 				// Increase/decrease nested tag count.
-				if ($tag{1} == '/')						$depth--;
-				else if ($tag{strlen($tag)-2} != '/')	$depth++;
+				if ($tag[1] == '/')						$depth--;
+				else if ($tag[strlen($tag)-2] != '/')	$depth++;
 
 				if ($depth < 0) {
 					// Going out of parent element. Clean up and break so we
@@ -674,7 +674,7 @@ protected function _hashHTMLBlocks_inHTML($text, $hash_method, $md_attr) {
 			// Check for: Auto-close tag (like <hr/>)
 			//			 Comments and Processing Instructions.
 			if (preg_match('{^</?(?:' . $this->auto_close_tags_re . ')\b}', $tag) ||
-				$tag{1} == '!' || $tag{1} == '?')
+				$tag[1] == '!' || $tag[1] == '?')
 			{
 				// Just add the tag to the block as if it was text.
 				$block_text .= $tag;
@@ -683,8 +683,8 @@ protected function _hashHTMLBlocks_inHTML($text, $hash_method, $md_attr) {
 				// Increase/decrease nested tag count. Only do so if
 				// the tag's name match base tag's.
 				if (preg_match('{^</?' . $base_tag_name_re . '\b}', $tag)) {
-					if ($tag{1} == '/')						$depth--;
-					else if ($tag{strlen($tag)-2} != '/')	$depth++;
+					if ($tag[1] == '/')						$depth--;
+					else if ($tag[strlen($tag)-2] != '/')	$depth++;
 				}
 				
 				// Check for `markdown="1"` attribute and handle it.
@@ -1071,7 +1071,7 @@ protected function _doHeaders_callback_setext($matches) {
 			return $matches[0];
 		}
 
-		$level = $matches[3]{0} == '=' ? 1 : 2;
+		$level = $matches[3][0] == '=' ? 1 : 2;
 
 		$defaultId = is_callable($this->header_id_func) ? call_user_func($this->header_id_func, $matches[1]) : null;
 
@@ -1466,7 +1466,7 @@ protected function _doFencedCodeBlocks_callback($matches) {
 
 		$classes = array();
 		if ($classname != "") {
-			if ($classname{0} == '.')
+			if ($classname[0] == '.')
 				$classname = substr($classname, 1);
 			$classes[] = $this->code_class_prefix . $classname;
 		}
